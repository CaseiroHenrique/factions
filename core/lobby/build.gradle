plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'conexao.code'
version = '1.0-SNAPSHOT'

// Use Java 21 toolchain so we can compile against Paper API (which requires Java 21)
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url  = 'https://repo.papermc.io/repository/maven-public/'
    }
}

dependencies {
    implementation project(':common')                           // embute DatabaseManager
    compileOnly 'io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT'
    compileOnly 'com.google.guava:guava:31.1-jre'               // para ByteStreams, ByteArrayDataInput
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    // Garante que compilamos alvo Java 21 bytecode
    options.release.set(21)
}

processResources {
    inputs.property 'version', version
    filteringCharset = 'UTF-8'
    filesMatching('plugin.yml') {
        expand 'version': version
    }
}

// Fat-JAR “lobby.jar” contendo common
tasks.named('shadowJar', com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    archiveBaseName.set('lobby')
    archiveClassifier.set('')   // sem "-all"
    mergeServiceFiles()          // se houver service loaders
    // Não usamos `relocate` para evitar ASM em bytecode Java 21
}

// Desativa o JAR padrão (evita gerar dois jars)
tasks.named('jar') {
    enabled = false
}

// Garante que `./gradlew build` produza o shadowJar único
tasks.named('build') {
    dependsOn tasks.named('shadowJar')
    finalizedBy tasks.named('copyPlugin')
}

// Copia o plugin gerado para a pasta do servidor
tasks.register('copyPlugin', Copy) {
    dependsOn tasks.named('shadowJar')
    from tasks.named('shadowJar')
    into new File('E\\hyze\\lobby\\plugins')
}
